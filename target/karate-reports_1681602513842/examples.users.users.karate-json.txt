{"failedCount":1,"prefixedPath":"classpath:examples\/users\/users.feature","packageQualifiedName":"examples.users.users","loopIndex":-1,"relativePath":"examples\/users\/users.feature","scenarioResults":[{"sectionIndex":0,"stepResults":[{"result":{"nanos":861400,"millis":0.8614,"status":"passed"},"step":{"line":4,"prefix":"Given","index":0,"text":"url 'https:\/\/jsonplaceholder.typicode.com'"},"stepLog":"02:48:10.254 karate.env system property was: null \n"},{"result":{"nanos":397110000,"millis":397.11,"status":"passed"},"step":{"line":5,"prefix":"When","index":1,"text":"method get"},"stepLog":"02:48:10.452 request:\n1 > GET https:\/\/jsonplaceholder.typicode.com\n1 > Host: jsonplaceholder.typicode.com\n1 > Connection: Keep-Alive\n1 > User-Agent: Apache-HttpClient\/4.5.14 (Java\/17.0.2)\n1 > Accept-Encoding: gzip,deflate\n\n\n02:48:10.659 response time in milliseconds: 204\n1 < 200\n1 < Date: Sat, 15 Apr 2023 23:48:11 GMT\n1 < Content-Type: text\/html; charset=UTF-8\n1 < Transfer-Encoding: chunked\n1 < Connection: keep-alive\n1 < X-Powered-By: Express\n1 < X-Ratelimit-Limit: 1000\n1 < X-Ratelimit-Remaining: 999\n1 < X-Ratelimit-Reset: 1681542264\n1 < Vary: Origin, Accept-Encoding\n1 < Access-Control-Allow-Credentials: true\n1 < Cache-Control: public, max-age=43200\n1 < Last-Modified: Sat, 15 Apr 2023 00:04:18 GMT\n1 < Via: 1.1 vegur\n1 < CF-Cache-Status: HIT\n1 < Age: 1350\n1 < Report-To: {\"endpoints\":[{\"url\":\"https:\\\/\\\/a.nel.cloudflare.com\\\/report\\\/v3?s=f%2BK04s%2FRbJ0vNpRXl%2FSgWb%2BXvOPCDMPZKozxjozyBrBk3wnZZ5YiSJoXnC%2BjZYPuhzdP4I1wtIbAJC5pqODrQ9yt7WT80sfhnref3%2FMhSKivB4w%2B7tKI8Y15yw8OLg0slp5B9kJTKfP8JWG%2BWYjp\"}],\"group\":\"cf-nel\",\"max_age\":604800}\n1 < NEL: {\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}\n1 < Server: cloudflare\n1 < CF-RAY: 7b8813f1cb995c7a-FRA\n1 < alt-svc: h3=\":443\"; ma=86400, h3-29=\":443\"; ma=86400\n\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\" \/>\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\" \/>\n<link rel=\"stylesheet\" href=\"\/style.css\" \/>\n<link rel=\"stylesheet\" href=\"https:\/\/cdnjs.cloudflare.com\/ajax\/libs\/prism\/1.21.0\/themes\/prism-tomorrow.min.css\" \/>\n<title>JSONPlaceholder - Free Fake REST API<\/title>\n\n<script async src=\"https:\/\/www.googletagmanager.com\/gtag\/js?id=G-E3C3GCQVBN\"><\/script>\n<script>\n    window.dataLayer = window.dataLayer || []\n    function gtag() {\n      dataLayer.push(arguments)\n    }\n    gtag('js', new Date())\n\n    gtag('config', 'G-E3C3GCQVBN')\n  <\/script>\n<\/head>\n<body class=\"px-2\">\n<header class=\"\n        container\n        mx-auto\n        max-w-4xl\n        flex flex-col\n        md:flex-row\n        justify-between\n        py-one\n        mb-three\n      \">\n<h1>\n<a href=\"\/\" class=\"font-bold no-underline\">JSONPlaceholder<\/a>\n<\/h1>\n<nav>\n<ul class=\"flex\">\n<li><a href=\"\/guide\" class=\"mr-4 no-underline\">Guide<\/a><\/li>\n<li>\n<a href=\"https:\/\/github.com\/sponsors\/typicode\" class=\"mr-4 no-underline\">Sponsor this project<\/a>\n<\/li>\n<li>\n<a href=\"https:\/\/blog.typicode.com\" class=\"mr-4 no-underline\">Blog<\/a>\n<\/li>\n<li>\n<a href=\"https:\/\/my-json-server.typicode.com\" class=\"no-underline\">My JSON Server<\/a>\n<\/li>\n<\/ul>\n<\/nav>\n<\/header>\n<div>\n\n<section id=\"hero\" class=\"-mt-three py-36 mb-six -mx-2\">\n<div class=\"container mx-auto max-w-4xl\">\n<span class=\"text-6xl bold\">{JSON} Placeholder<\/span>\n<h1 class=\"mt-two text-lg\">Free fake API for testing and prototyping.<\/h1>\n<p class=\"mb-one text-lg\">\nPowered by\n<a href=\"https:\/\/github.com\/typicode\/json-server\">JSON Server<\/a>\n+\n<a href=\"https:\/\/github.com\/typicode\/lowdb\">LowDB<\/a>. Tested with\n<a href=\"https:\/\/github.com\/typicode\/xv\">XV<\/a>.\n<\/p>\n<p><b>Serving ~2 billion requests each month<\/b>.<\/p>\n<\/div>\n<\/section>\n\n<section class=\"container mx-auto max-w-4xl mb-six\">\n<h2 class=\"text-2xl mb-one\">Sponsors<\/h2>\n<p class=\"mb-two\">\nJSONPlaceholder is supported by the following companies and\n<a href=\"https:\/\/github.com\/sponsors\/typicode\">Sponsors<\/a> on GitHub, check\nthem out üíñ\n<\/p>\n<p>\n<a href=\"https:\/\/tryretool.com\/?utm_source=sponsor&utm_campaign=typicode\" target=\"_blank\">\n<img src=\"https:\/\/i.imgur.com\/IBItATn.png\" class=\"h-three mb-two\" \/>\n<\/a>\n<\/p>\n<p>\n<a href=\"https:\/\/mockend.com\" target=\"_blank\">\n<img src=\"mockend.svg\" class=\"h-three mb-two\" \/>\n<\/a>\n<\/p>\n<p>\n<a href=\"https:\/\/megafamous.com\/buy-instagram-followers\" target=\"_blank\">\n<img src=\"megafamous.png\" class=\"h-three mb-two\" \/>\n<\/a>\n<\/p>\n<p>\n<a href=\"http:\/\/asocks.com\/c\/TFw5bz\" target=\"_blank\">\n<img src=\"asocks.png\" class=\"h-three mb-two\" \/>\n<\/a>\n<\/p>\n<p class=\"my-two\">\n<a href=\"https:\/\/github.com\/sponsors\/typicode\">Your company logo here<\/a>\n<\/p>\n<\/section>\n\n<section class=\"container mx-auto max-w-4xl mb-four\">\n<h2 class=\"text-2xl mb-one\">Try it<\/h2>\n<p>Run this code here, in a console or from any site:<\/p>\n<pre><code id=\"example\" class=\"language-javascript\">fetch('https:\/\/jsonplaceholder.typicode.com\/todos\/1')\n      .then(response => response.json())\n      .then(json => console.log(json))<\/code><\/pre>\n<button id=\"run-button\" class=\"\n      bg-green-500\n      hover:bg-green-700\n      text-white\n      font-bold\n      py-quarter\n      my-quarter\n      px-4\n      rounded\n    \">\nRun script\n<\/button>\n<pre><code id=\"result\" class=\"language-javascript\">{}<\/code><\/pre>\n<p id=\"run-message\" class=\"invisible\">\nCongrats you've made your first call to JSONPlaceholder! üòÉ üéâ\n<\/p>\n<div class=\"horizontal flat\" data-ea-publisher=\"jsonplaceholdertypicodecom\" data-ea-style=\"stickybox\" data-ea-keywords=\"javascript|typescript|python|ruby|swift|react|vue|web|testing|frontend|front-end|backend|back-end\" data-ea-manual=\"true\"><\/div>\n<\/section>\n<main class=\"container mx-auto max-w-4xl\"><h2>When to use<\/h2>\n<p>JSONPlaceholder is a free online REST API that you can use <strong>whenever you need some fake data<\/strong>. It can be in a README on GitHub, for a demo on CodeSandbox, in code examples on Stack Overflow, ...or simply to test things locally.<\/p>\n<h2>Resources<\/h2>\n<p>JSONPlaceholder comes with a set of 6 common resources:<\/p>\n<table>\n<thead>\n<tr>\n<th><\/th>\n<th><\/th>\n<\/tr>\n<\/thead>\n<tbody>\n<tr>\n<td><a href=\"\/posts\">\/posts<\/a><\/td>\n<td>100 posts<\/td>\n<\/tr>\n<tr>\n<td><a href=\"\/comments\">\/comments<\/a><\/td>\n<td>500 comments<\/td>\n<\/tr>\n<tr>\n<td><a href=\"\/albums\">\/albums<\/a><\/td>\n<td>100 albums<\/td>\n<\/tr>\n<tr>\n<td><a href=\"\/photos\">\/photos<\/a><\/td>\n<td>5000 photos<\/td>\n<\/tr>\n<tr>\n<td><a href=\"\/todos\">\/todos<\/a><\/td>\n<td>200 todos<\/td>\n<\/tr>\n<tr>\n<td><a href=\"\/users\">\/users<\/a><\/td>\n<td>10 users<\/td>\n<\/tr>\n<\/tbody>\n<\/table>\n<p><strong>Note<\/strong>: resources have relations. For example: posts have many comments, albums have many photos, ... see <a href=\"\/guide\">guide<\/a> for the full list.<\/p>\n<h2>Routes<\/h2>\n<p>All HTTP methods are supported. You can use http or https for your requests.<\/p>\n<table>\n<thead>\n<tr>\n<th><\/th>\n<th><\/th>\n<\/tr>\n<\/thead>\n<tbody>\n<tr>\n<td>GET<\/td>\n<td><a href=\"\/posts\">\/posts<\/a><\/td>\n<\/tr>\n<tr>\n<td>GET<\/td>\n<td><a href=\"\/posts\/1\">\/posts\/1<\/a><\/td>\n<\/tr>\n<tr>\n<td>GET<\/td>\n<td><a href=\"\/posts\/1\/comments\">\/posts\/1\/comments<\/a><\/td>\n<\/tr>\n<tr>\n<td>GET<\/td>\n<td><a href=\"\/comments?postId=1\">\/comments?postId=1<\/a><\/td>\n<\/tr>\n<tr>\n<td>POST<\/td>\n<td>\/posts<\/td>\n<\/tr>\n<tr>\n<td>PUT<\/td>\n<td>\/posts\/1<\/td>\n<\/tr>\n<tr>\n<td>PATCH<\/td>\n<td>\/posts\/1<\/td>\n<\/tr>\n<tr>\n<td>DELETE<\/td>\n<td>\/posts\/1<\/td>\n<\/tr>\n<\/tbody>\n<\/table>\n<p><strong>Note<\/strong>: see <a href=\"\/guide\">guide<\/a> for usage examples.<\/p>\n<h2>Use your own data<\/h2>\n<p>With our sponsor <a href=\"https:\/\/mockend.com\">Mockend<\/a> and a simple GitHub repo, you can have your own fake online REST server in seconds.<\/p>\n<\/main>\n<script>\n  \/\/ Use http or https based on location.protocol\n  var example = document.getElementById('example')\n  example.textContent = example.textContent.replace('http:', location.protocol)\n\n  \/\/ Highlight result element\n  var result = document.getElementById('result')\n\n  \/\/ Run example\n  var runButton = document.getElementById('run-button')\n  runButton.onclick = function () {\n    var root = location.protocol + '\/\/jsonplaceholder.typicode.com'\n    var runMessage = document.getElementById('run-message')\n\n    fetch('https:\/\/jsonplaceholder.typicode.com\/todos\/1')\n      .then((response) => response.json())\n      .then((json) => {\n        var str = JSON.stringify(json, null, '  ')\n\n        \/\/ Format result\n        result.innerHTML = Prism.highlight(\n          str,\n          Prism.languages.javascript,\n          'javascript',\n        )\n\n        runMessage.className = ''\n      })\n  }\n<\/script>\n<\/div>\n\n<footer class=\"container mx-auto max-w-4xl mt-four\">\n<div class=\"mb-one\">\n<a href=\"https:\/\/github.com\/users\/typicode\/sponsorship\">\n<strong>You can sponsor this project (and others) on GitHub<\/strong>\n<\/a>\n<\/div>\n<div class=\"mb-one\">\nCoded and maintained with ‚ù§Ô∏è by\n<a href=\"https:\/\/github.com\/typicode\">typicode<\/a> ¬© 2022\n<\/div>\n<\/footer>\n<script src=\"https:\/\/cdnjs.cloudflare.com\/ajax\/libs\/prism\/1.21.0\/prism.min.js\"><\/script>\n<script src=\"https:\/\/media.ethicalads.io\/media\/client\/ethicalads.min.js\"><\/script>\n<script src=\"\/script.js\"><\/script>\n<script defer src=\"https:\/\/static.cloudflareinsights.com\/beacon.min.js\/v2b4487d741ca48dcbadcaf954e159fc61680799950996\" integrity=\"sha512-D\/jdE0CypeVxFadTejKGTzmwyV10c1pxZk\/AqjJuZbaJwGMyNHY3q\/mTPWqMUnFACfCTunhZUVcd4cV78dK1pQ==\" data-cf-beacon='{\"rayId\":\"7b8813f1cb995c7a\",\"version\":\"2023.3.0\",\"r\":1,\"b\":1,\"token\":\"2f059cbf58a24e59854ee0884c97b166\",\"si\":100}' crossorigin=\"anonymous\"><\/script>\n<\/body>\n<\/html>\n\n\n"},{"result":{"nanos":13900,"millis":0.0139,"status":"passed"},"step":{"line":6,"prefix":"Then","index":2,"text":"status 200"}}],"executorName":"pool-1-thread-1","line":3,"name":"Load Test API","description":"","durationMillis":397.9853,"startTime":1681602490172,"failed":false,"refId":"[1:3]","endTime":1681602490675,"exampleIndex":-1},{"sectionIndex":1,"stepResults":[{"result":{"nanos":13668000,"errorMessage":"js failed:\n>>>>\n01: karate.repeat(10) { karate.call('classpath:loadtest.feature@Load Test API') }\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:1:18 Expected ; but found {\r\nkarate.repeat(10) { karate.call('classpath:loadtest.feature@Load Test API') }\r\n                  ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1199)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2147)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2066)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1260)\n\nclasspath:examples\/users\/users.feature:9","millis":13.668,"status":"failed"},"step":{"line":9,"prefix":"*","index":0,"text":"def requests = karate.repeat(10) { karate.call('classpath:loadtest.feature@Load Test API') }"},"stepLog":"02:48:10.268 karate.env system property was: null \n02:48:10.291 classpath:examples\/users\/users.feature:9\n* def requests = karate.repeat(10) { karate.call('classpath:loadtest.feature@Load Test API') }\njs failed:\n>>>>\n01: karate.repeat(10) { karate.call('classpath:loadtest.feature@Load Test API') }\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:1:18 Expected ; but found {\r\nkarate.repeat(10) { karate.call('classpath:loadtest.feature@Load Test API') }\r\n                  ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1199)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2147)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2066)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1260)\n\nclasspath:examples\/users\/users.feature:9\n"},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":10,"prefix":"*","index":1,"text":"karate.parallel(requests, 5)"}}],"line":8,"description":"","durationMillis":13.668,"failed":true,"error":"js failed:\n>>>>\n01: karate.repeat(10) { karate.call('classpath:loadtest.feature@Load Test API') }\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:1:18 Expected ; but found {\r\nkarate.repeat(10) { karate.call('classpath:loadtest.feature@Load Test API') }\r\n                  ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1199)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2147)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2066)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1260)\n\nclasspath:examples\/users\/users.feature:9","executorName":"pool-1-thread-2","name":"Load Test API with Concurrent Users","startTime":1681602490172,"refId":"[2:8]","endTime":1681602490291,"exampleIndex":-1}],"callDepth":0,"name":"Load Test","description":"","resultDate":"2023-04-16 02:48:10 AM","durationMillis":411.6533,"passedCount":1}